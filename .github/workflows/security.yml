name: Security Scan

on:
  schedule:
    - cron: '0 6 * * 1' # Weekly on Monday at 6 AM UTC
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  security:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        
    - name: Run Nancy for vulnerability scanning
      run: |
        go list -json -deps ./... | docker run --rm -i sonatypecommunity/nancy:latest sleuth
        
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.33.1
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      continue-on-error: true
      with:
        sarif_file: 'trivy-results.sarif'
        
    - name: Display Trivy results as fallback
      if: always()
      run: |
        echo "Trivy scan completed. Results saved to trivy-results.sarif"
        if [ -f "trivy-results.sarif" ]; then
          echo "SARIF file size: $(wc -c < trivy-results.sarif) bytes"
          # Display a summary of findings (if any)
          if command -v jq &> /dev/null; then
            echo "Trivy findings summary:"
            jq -r '.runs[0].results | length' trivy-results.sarif 2>/dev/null || echo "No findings or unable to parse SARIF"
          fi
        fi
        
    - name: Upload Trivy results as artifact
      if: always()
      uses: actions/upload-artifact@v5
      with:
        name: trivy-security-results
        path: trivy-results.sarif
        retention-days: 30
        
    - name: Run Go security checks
      run: |
        # Check for known security issues using go mod
        go mod verify
        # Check for outdated dependencies
        go list -u -m all
